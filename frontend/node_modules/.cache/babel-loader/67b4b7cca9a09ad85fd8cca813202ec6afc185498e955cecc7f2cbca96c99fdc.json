{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bharg\\\\OneDrive\\\\Desktop\\\\Digital literacy\\\\frontend\\\\src\\\\pages\\\\ChooseLanguage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport { speak, debugTeluguVoices, forceTeluguSpeech } from '../services/voice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChooseLanguage() {\n  _s();\n  const {\n    language,\n    setLanguage\n  } = useLanguage();\n  const history = useHistory();\n  const choose = code => {\n    setLanguage(code);\n    const langCode = code === 'te' ? 'te-IN' : code === 'hi' ? 'hi-IN' : code === 'ta' ? 'ta-IN' : 'en-IN';\n\n    // Debug Telugu voices if selecting Telugu\n    if (code === 'te') {\n      console.log('Telugu selected, debugging voices...');\n      debugTeluguVoices();\n    }\n\n    // Small delay to allow voices to hydrate in some browsers\n    setTimeout(() => {\n      const message = code === 'te' ? 'భాష సేవ్ చేయబడింది' : code === 'hi' ? 'भाषा सहेजी गई' : code === 'ta' ? 'மொழி சேமிக்கப்பட்டது' : 'Language saved';\n      console.log(`Speaking message: \"${message}\" in language: ${langCode}`);\n      speak(message, langCode);\n    }, 150);\n    history.push('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto fade-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center mb-6\",\n      children: \"Choose Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => choose('en'),\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => choose('hi'),\n        children: \"\\u0939\\u093F\\u0928\\u094D\\u0926\\u0940\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => choose('te'),\n        children: \"\\u0C24\\u0C46\\u0C32\\u0C41\\u0C17\\u0C41\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => choose('ta'),\n        children: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ChooseLanguage, \"8EYbEu6cZvk1M7a/D8ZlGU2x6Fw=\", false, function () {\n  return [useLanguage, useHistory];\n});\n_c = ChooseLanguage;\nexport default ChooseLanguage;\nvar _c;\n$RefreshReg$(_c, \"ChooseLanguage\");","map":{"version":3,"names":["React","useLanguage","useHistory","speak","debugTeluguVoices","forceTeluguSpeech","jsxDEV","_jsxDEV","ChooseLanguage","_s","language","setLanguage","history","choose","code","langCode","console","log","setTimeout","message","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bharg/OneDrive/Desktop/Digital literacy/frontend/src/pages/ChooseLanguage.js"],"sourcesContent":["import React from 'react';\nimport { useLanguage } from '../contexts/LanguageContext';\nimport { useHistory } from 'react-router-dom';\nimport { speak, debugTeluguVoices, forceTeluguSpeech } from '../services/voice';\n\nfunction ChooseLanguage() {\n  const { language, setLanguage } = useLanguage();\n  const history = useHistory();\n\n  const choose = (code) => {\n    setLanguage(code);\n    const langCode = code === 'te' ? 'te-IN' : code === 'hi' ? 'hi-IN' : code === 'ta' ? 'ta-IN' : 'en-IN';\n    \n    // Debug Telugu voices if selecting Telugu\n    if (code === 'te') {\n      console.log('Telugu selected, debugging voices...');\n      debugTeluguVoices();\n    }\n    \n    // Small delay to allow voices to hydrate in some browsers\n    setTimeout(() => {\n      const message = code === 'te' ? 'భాష సేవ్ చేయబడింది' : \n                     code === 'hi' ? 'भाषा सहेजी गई' : \n                     code === 'ta' ? 'மொழி சேமிக்கப்பட்டது' : \n                     'Language saved';\n      \n      console.log(`Speaking message: \"${message}\" in language: ${langCode}`);\n      speak(message, langCode);\n    }, 150);\n    \n    history.push('/home');\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto fade-up\">\n      <h2 className=\"text-2xl font-bold text-center mb-6\">Choose Language</h2>\n      <div className=\"grid grid-cols-2 gap-4\">\n        <button className=\"btn\" onClick={() => choose('en')}>English</button>\n        <button className=\"btn\" onClick={() => choose('hi')}>हिन्दी</button>\n        <button className=\"btn\" onClick={() => choose('te')}>తెలుగు</button>\n        <button className=\"btn\" onClick={() => choose('ta')}>தமிழ்</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChooseLanguage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}